{"version":3,"sources":["webpack:///webpack/bootstrap d96fcae00e01a1e0ddc8","webpack:///./studio/main_dev.js","webpack:///./studio/ExportModal.js","webpack:///external \"Studio.libraries['react']\"","webpack:///external \"Studio\"","webpack:///external \"Studio.libraries['filesaver.js-npm']\"","webpack:///./studio/ImportModal.js"],"names":["Studio","addToolbarComponent","props","openModal","ExportModal","ImportModal","selections","references","getReferences","Object","keys","forEach","k","e","_id","setState","es","v","updates","Array","isArray","api","post","data","selection","state","filter","responseType","response","fileSaver","saveAs","alert","message","stack","assign","__selected","height","overflow","getActiveEntity","handleNodeSelect","download","Component","EntityRefSelect","ImportFinishedModal","setTimeout","confirmBtn","focus","location","reload","close","log","options","width","boxSizing","el","confirm","selectedFolderShortid","validated","target","files","length","status","file","reader","FileReader","onloadend","refs","value","params","targetFolder","attach","filename","result","onerror","readAsArrayBuffer","dispatchEvent","MouseEvent","window","display","upload","border","padding","opacity","folders","isGroup","entity","__entitySet","selected","shortid","openFileDialog","cancel","import","eventType","bubbles","cancelable","mouseEvent","document","createEvent","initMouseEvent","prototype","Event"],"mappings":"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","file":"./studio/main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d96fcae00e01a1e0ddc8\n **/","import ExportModal from './ExportModal.js'\nimport ImportModal from './ImportModal.js'\nimport Studio from 'jsreport-studio'\n\nStudio.addToolbarComponent((props) => <div\n  className='toolbar-button' onClick={() => Studio.openModal(ExportModal)}><i className='fa fa-download' /> Export</div>, 'settings')\n\nStudio.addToolbarComponent((props) => <div\n  className='toolbar-button' onClick={() => Studio.openModal(ImportModal)}><i className='fa fa-upload' /> Import</div>, 'settings')\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/main_dev.js\n **/","import React, {Component} from 'react'\r\nimport Studio, { EntityTree } from 'jsreport-studio'\r\nimport fileSaver from 'filesaver.js-npm'\r\n\r\nexport default class ExportModal extends Component {\r\n  componentWillMount () {\r\n    let selections = {}\r\n\r\n    var references = Studio.getReferences()\r\n    Object.keys(references).forEach((k) => {\r\n      Object.keys(references[k]).forEach((e) => (selections[references[k][e]._id] = true))\r\n    })\r\n    this.setState(selections)\r\n  }\r\n\r\n  handleNodeSelect (references, es, v) {\r\n    let updates = {}\r\n\r\n    if (Array.isArray(es)) {\r\n      es.forEach((_id) => {\r\n        updates[_id] = v\r\n      })\r\n    } else {\r\n      references[es].forEach((e) => {\r\n        updates[e._id] = v\r\n      })\r\n    }\r\n\r\n    this.setState(updates)\r\n  }\r\n\r\n  async download () {\r\n    try {\r\n      let response = await Studio.api.post('api/export', {\r\n        data: {\r\n          selection: Object.keys(this.state).filter((k) => this.state[k])\r\n        },\r\n        responseType: 'blob'\r\n      }, true)\r\n\r\n      fileSaver.saveAs(response, 'export.zip')\r\n    } catch (e) {\r\n      alert('Unable to prepare export ' + e.message + ' ' + e.stack)\r\n    }\r\n  }\r\n\r\n  render () {\r\n    let references = Studio.getReferences()\r\n    Object.keys(references).forEach((k) => {\r\n      Object.keys(references[k]).forEach((e) => (references[k][e] = Object.assign({}, references[k][e], { __selected: this.state[references[k][e]._id] })))\r\n    })\r\n\r\n    return <div className='form-group'>\r\n      <div><h1><i className='fa fa-download' /> Export objects</h1></div>\r\n      <div style={{height: '30rem', overflow: 'auto'}}>\r\n        <EntityTree\r\n          activeEntity={Studio.getActiveEntity()}\r\n          entities={references}\r\n          selectable\r\n          onNodeSelect={(es, v) => this.handleNodeSelect(references, es, v)}\r\n          onSelect={(e, v) => this.setState({ [e._id]: !this.state[e._id] })}\r\n        />\r\n      </div>\r\n      <div className='button-bar'>\r\n        <a className='button confirmation' onClick={() => this.download()}>\r\n          Download\r\n        </a>\r\n      </div>\r\n    </div>\r\n  }\r\n}\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/ExportModal.js\n **/","module.exports = Studio.libraries['react'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['react']\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = Studio;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = Studio.libraries['filesaver.js-npm'];\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"Studio.libraries['filesaver.js-npm']\"\n ** module id = 4\n ** module chunks = 0\n **/","import React, {Component} from 'react'\nimport Studio from 'jsreport-studio'\n\nconst EntityRefSelect = Studio.EntityRefSelect\n\nclass ImportFinishedModal extends Component {\n  componentDidMount () {\n    setTimeout(() => this.confirmBtn.focus(), 0)\n  }\n\n  componentWillUnmount () {\n    location.reload()\n  }\n\n  confirm () {\n    location.reload()\n    this.props.close()\n  }\n\n  render () {\n    const { log } = this.props.options\n\n    return (\n      <div>\n        <h1><i className='fa fa-info-circle' /> Import finished</h1>\n        {log != null && log !== '' && (\n          <div className='form-group'>\n            <div>\n              <i>Some errors/warnings happened during the import:</i>\n            </div>\n            <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={log} />\n          </div>\n        )}\n        <div className='form-group'>\n          <i>Now we need to reload the studio..</i>\n        </div>\n        <div className='button-bar'>\n          <button ref={(el) => { this.confirmBtn = el }} className='button confirmation' onClick={() => this.confirm()}>\n            Ok\n          </button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default class ImportModal extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      selectedFolderShortid: null,\n      validated: false\n    }\n  }\n\n  upload (e) {\n    if (!e.target.files.length) {\n      return\n    }\n\n    this.setState({\n      status: '1',\n      log: 'Validating import....'\n    })\n\n    this.file = e.target.files[0]\n    const reader = new FileReader()\n\n    reader.onloadend = async () => {\n      this.refs.file.value = ''\n\n      try {\n        const result = await Studio.api.post('api/validate-import', {\n          params: { targetFolder: this.state.selectedFolderShortid },\n          attach: { filename: 'import.zip', file: this.file }\n        }, true)\n\n        this.setState({\n          validated: true,\n          status: result.status,\n          log: result.log\n        })\n      } catch (e) {\n        this.setState({\n          validated: true,\n          status: '1',\n          log: e.message + ' ' + e.stack\n        })\n      }\n    }\n\n    reader.onerror = function () {\n      alert('There was an error reading the file!')\n    }\n\n    reader.readAsArrayBuffer(this.file)\n  }\n\n  async import () {\n    try {\n      this.setState({\n        status: '1',\n        log: 'Working on import....'\n      })\n\n      const result = await Studio.api.post('api/import', {\n        params: { targetFolder: this.state.selectedFolderShortid },\n        attach: { filename: 'import.zip', file: this.file }\n      }, true)\n\n      Studio.openModal(ImportFinishedModal, {\n        log: result.log\n      })\n    } catch (e) {\n      this.setState({\n        status: '1',\n        log: e.message + ' ' + e.stack\n      })\n    }\n  }\n\n  cancel () {\n    this.setState({\n      validated: false\n    })\n  }\n\n  openFileDialog () {\n    this.refs.file.dispatchEvent(new MouseEvent('click', {\n      'view': window,\n      'bubbles': false,\n      'cancelable': true\n    }))\n  }\n\n  render () {\n    return (\n      <div>\n        <input type='file' key='file' ref='file' style={{display: 'none'}} onChange={(e) => this.upload(e)} />\n\n        <h1><i className='fa fa-upload' /> Import objects</h1>\n\n        <div className='form-group'>\n          <p>\n            A <b>validation is run first</b>, so you can safely upload the exported package and review the changes which will be performed.\n            <br />\n            Afterwards <b>you can confirm or cancel the import</b>.\n          </p>\n        </div>\n        <div className='form-group'>\n          <div style={{ border: '1px dashed black', padding: '0.6rem', opacity: this.state.validated ? 0.7 : 1 }}>\n            <label>You can <b>optionally</b> select a folder in which the entities  will be inserted</label>\n            <EntityRefSelect\n              noModal\n              allowNewFolder\n              treeStyle={{ height: '12rem' }}\n              headingLabel='Select folder'\n              filter={(references) => ({ folders: references.folders })}\n              selectableFilter={(isGroup, entity) => entity.__entitySet === 'folders'}\n              value={this.state.selectedFolderShortid}\n              disabled={this.state.validated}\n              onChange={(selected) => {\n                this.setState({\n                  selectedFolderShortid: selected.length > 0 ? selected[0].shortid : null\n                })\n              }}\n            />\n          </div>\n          {!this.state.validated && (\n            <div className='button-bar'>\n              <a className='button confirmation' onClick={() => this.openFileDialog()}>\n                Validate\n              </a>\n            </div>\n          )}\n          <br />\n          {this.state.validated && (\n            <div>\n              <div>\n                <i>Log of changes with the import:</i>\n              </div>\n              <textarea style={{width: '100%', boxSizing: 'border-box'}} rows='10' readOnly value={this.state.log} />\n            </div>\n          )}\n          {this.state.validated && this.state.status === '0' && (\n            <div className='button-bar'>\n              <a className='button danger' onClick={() => this.cancel()}>\n                Cancel\n              </a>\n              <a className='button confirmation' onClick={() => this.import()}>\n                Import\n              </a>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\n(function (window) {\n  try {\n    new MouseEvent('test')  // eslint-disable-line\n    return false // No need to polyfill\n  } catch (e) {\n    // Need to polyfill - fall through\n  }\n\n  // Polyfills DOM4 MouseEvent\n\n  var MouseEvent = function (eventType, params) {\n    params = params || { bubbles: false, cancelable: false }\n    var mouseEvent = document.createEvent('MouseEvent')\n    mouseEvent.initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n\n    return mouseEvent\n  }\n\n  MouseEvent.prototype = Event.prototype\n\n  window.MouseEvent = MouseEvent\n})(window)\n\n\n\n/** WEBPACK FOOTER **\n ** ./studio/ImportModal.js\n **/"],"sourceRoot":""}